process {

    // Default queue is using memory optimized instances, 1:8 CPU/MEM ratio
    cpus   = { check_max( 1    * task.attempt, 'cpus'   ) }
    memory = { check_max( 7.GB * task.attempt, 'memory' ) }
    time   = { check_max( 4.h  * task.attempt, 'time'   ) }
    
    errorStrategy = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'finish' }
    maxRetries    = 3
    maxErrors     = '-1'
    
    // =========================================================================
    // LABELS SPECIFIC
    // =========================================================================
    
    // Resources to match AWS instances - memory optimized
    // Labels from NF-CORE pipelines
    withLabel:process_single {
        cpus   = { check_max( 1                  , 'cpus'    ) }
        memory = { check_max( 7.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
    }
    withLabel:process_low {
        cpus   = { check_max( 2     * task.attempt, 'cpus'    ) }
        memory = { check_max( 14.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h   * task.attempt, 'time'    ) }
    }
    withLabel:process_medium {
        cpus   = { check_max( 8     * task.attempt, 'cpus'    ) }
        memory = { check_max( 60.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 8.h   * task.attempt, 'time'    ) }
    }
    withLabel:process_high {
        cpus   = { check_max( 16    * task.attempt, 'cpus'    ) }
        memory = { check_max( 120.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 16.h  * task.attempt, 'time'    ) }
    }
    withLabel:process_long {
        time   = { check_max( 20.h  * task.attempt, 'time'    ) }
    }
    withLabel:process_high_memory {
        memory = { check_max( 220.GB * task.attempt, 'memory' ) }
    }
    withLabel:error_ignore {
        errorStrategy = 'ignore'
    }
    withLabel:error_retry {
        errorStrategy = 'retry'
        maxRetries    = 2
    }
    
    // Instance specific labels
    // Labels not present in native NF-CORE modules!
    withLabel: 'cpu_large' {
        cpus   = { check_max( 2         * task.attempt, 'cpus'    ) }
        memory = { check_max( 3.GB      * task.attempt, 'memory'  ) }
    }
    
    withLabel: 'cpu_xlarge' {
        cpus   = { check_max( 4         * task.attempt, 'cpus'    ) }
        memory = { check_max( 7.GB      * task.attempt, 'memory'  ) }
    }
    
    withLabel: 'cpu_2xlarge' {
        cpus   = { check_max( 8         * task.attempt, 'cpus'    ) }
        memory = { check_max( 14.GB     * task.attempt, 'memory'  ) }
    }
    
    withLabel: 'mem_large' {
        cpus   = { check_max( 2         * task.attempt, 'cpus'    ) }
        memory = { check_max( 15.GB     * task.attempt, 'memory'  ) }
    }
    
    withLabel: 'mem_xlarge' {
        cpus   = { check_max( 4         * task.attempt, 'cpus'    ) }
        memory = { check_max( 30.GB     * task.attempt, 'memory'  ) }
    }
    
    withLabel: 'mem_2xlarge' {
        cpus   = { check_max( 8         * task.attempt, 'cpus'    ) }
        memory = { check_max( 60.GB     * task.attempt, 'memory'  ) }
    }
    
    withLabel: 'mem_4xlarge' {
        cpus   = { check_max( 16         * task.attempt, 'cpus'    ) }
        memory = { check_max( 120.GB     * task.attempt, 'memory'  ) }
    }
    
    // =========================================================================
    // PROCESS SPECIFIC
    // =========================================================================
    
   
   /*
    withName: PROCESS_NAME {
        cpus          = { check_max( 4          * task.attempt, 'cpus'    ) }
        memory        = { check_max (8.GB       * task.attempt, 'memory' ) }
        time          = { check_max (12.h       * task.attempt, 'time'   ) }
        errorStrategy = { task.exitStatus in [143,137,104,134,139,250] ? 'retry' : 'finish' }
    }

    */

}